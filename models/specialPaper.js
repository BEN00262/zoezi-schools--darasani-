/*
  This snippet has been generated by johnnesta2018@gmail.com
*/

const mongoose = require("mongoose")

// since this is a paper in a level shit we can add alot about it
// we can add if its a timed paper 
// if its a timed paper the student can run the paper in exam mode

// this is how we are going to work with images
// we take top tier/secondtier/subjectname.png 

const specialPaperSchema = new mongoose.Schema({
    subject: {
        type: String,
        required: true
    },

    // if the paper author checks this we expect to have a duration if not just return an error
    isTimed: {
        type: Boolean,
        default: false
    },

    // paper fetched --> timed --> duration ( store ) --> current time ( save )

    // build a client side SDK to handle all the fetching, syncing and everything

    // we dont care about the start time of the paper 
    // the system will handle that from the frontend
    duration: {
        type: Number,
        default: -1
    },

    isVisible: {
        type: Boolean,
        default: true
    },

    questions: [{ type: mongoose.Types.ObjectId, ref: 'ques' }],

    parent: {
        type: mongoose.Types.ObjectId,
        ref: 'midTier'
    },

    // used for UI arrangement
    // create a rearranging thing that does this
    priority: {
        type: Number,
        default: 0
    },

    createdAt: {
        type: Date,
        default: Date.now
    }
})

module.exports = mongoose.model("special_paper", specialPaperSchema)